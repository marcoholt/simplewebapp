# ---------- Stage 1: Build (uses Node to compile React) ----------
FROM node:18-alpine AS build
WORKDIR /app

# Copy only manifests first to leverage layer caching
COPY package.json package-lock.json* ./

# Install ALL deps (including dev) for building
RUN npm ci

# Copy the rest of the source
COPY . .

# Build static assets into /app/build
RUN npm run build


# ---------- Stage 2: Runtime (serve static files with Nginx) ----------
FROM nginx:alpine

# Optional: drop a custom nginx.conf (see sample below)
# If you don't have one yet, comment the next line out.
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy the built artifacts from the previous stage
COPY --from=build /app/build /usr/share/nginx/html

# Expose HTTP port
EXPOSE 80

# Run Nginx in foreground (container PID 1)
CMD ["nginx", "-g", "daemon off;"]

