name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-2
  ECR_REGISTRY: 963527046628.dkr.ecr.us-east-2.amazonaws.com

jobs:
  ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    # Backend CI
    - name: Backend - Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Backend - Run tests
      run: |
        cd backend
        npm test || echo "No tests configured yet"
        
    - name: Backend - Run linting
      run: |
        cd backend
        npm run lint || echo "No linting configured yet"
        
    - name: Backend - Security scan with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'node:18-alpine'
        format: 'sarif'
        output: 'trivy-results-backend.sarif'
        
    - name: Backend - Build and push image
      env:
        ECR_REPOSITORY_BACKEND: simplewebapp-backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG -f backend/dockerfile . --push
        
    # Frontend CI
    - name: Frontend - Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Frontend - Run tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false || echo "No tests configured yet"
        
    - name: Frontend - Run linting
      run: |
        cd frontend
        npm run lint || echo "No linting configured yet"
        
    - name: Frontend - Security scan with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'nginx:alpine'
        format: 'sarif'
        output: 'trivy-results-frontend.sarif'
        
    - name: Frontend - Build and push image
      env:
        ECR_REPOSITORY_FRONTEND: simplewebapp-frontend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:$IMAGE_TAG -f frontend/dockerfile . --push
        
    # Update manifests for ArgoCD
    - name: Update Kubernetes manifests with new image tags
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update backend deployment
        sed -i "s|image: $ECR_REGISTRY/simplewebapp-backend:.*|image: $ECR_REGISTRY/simplewebapp-backend:$IMAGE_TAG|g" k8s-manifests/02-backend-deployment.yaml
        
        # Update frontend deployment
        sed -i "s|image: $ECR_REGISTRY/simplewebapp-frontend:.*|image: $ECR_REGISTRY/simplewebapp-frontend:$IMAGE_TAG|g" k8s-manifests/03-frontend-deployment.yaml
        
        # Commit and push changes for ArgoCD to pick up
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add k8s-manifests/
        git commit -m "CI: Update image tags to $IMAGE_TAG [skip ci]" || exit 0
        git push
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results-backend.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results-frontend.sarif'
